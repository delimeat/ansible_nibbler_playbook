- include_role:
   name: ufw
  vars:
   ufw_rules: 
    - { rule: allow, port: "{{ plex_http_port }}", proto: tcp }
    - { rule: allow, port: 3005, proto: tcp }
    - { rule: allow, port: 8324, proto: tcp }
    - { rule: allow, port: 32469, proto: tcp }
    - { rule: allow, port: 1900, proto: udp }
    - { rule: allow, port: 32410, proto: udp }
    - { rule: allow, port: 32412, proto: udp }
    - { rule: allow, port: 32413, proto: udp }
    - { rule: allow, port: 32414, proto: udp }

- name: create directories
  file:
   path: "{{ item }}"
   state: directory
   mode: 0755
  with_items:
   - "{{ plex_transcode_dir }}"

- name: create container
  docker_container:
   name: "{{ plex_container_name }}"
   image: "{{ plex_image }}:{{ plex_image_tag }}"
   pull: false
   restart_policy: unless-stopped
   state: started
   hostname: "{{ plex_hostname }}"
   networks:
    - name: "{{ traefik_network_name }}"
   ports:
    - "{{ plex_http_port }}:32400/tcp"
    - 3005:3005/tcp
    - 8324:8324/tcp
    - 32469:32469/tcp
    - 1900:1900/udp
    - 32410:32410/udp
    - 32412:32412/udp
    - 32413:32413/udp
    - 32414:32414/udp
   env:
    HOSTNAME: "{{ plex_hostname }}"
    ADVERTISE_IP: "http://{{ ansible_default_ipv4.address }}:{{ plex_http_port }}"
    CHANGE_CONFIG_DIR_OWNERSHIP: false
#    PLEX_UID: "{{ docker_uid }}"
#    PLEX_GID: "{{ docker_gid }}"
    ALLOWED_NETWORKS: "{{ ansible_default_ipv4.network }}/{{ ansible_default_ipv4.netmask }}"
    TZ: "{{ docker_tz }}"
   volumes:
    - "{{ plex_config_dir }}:/config"
    - "{{ plex_data_dir }}:/data"
    - "{{ plex_transcode_dir }}:/transcode"
   labels:
    traefik.enable=true
    traefik.docker.network="{{ traefik_network_name }}"
    traefik.backend=plex
    traefik.port=32400
    traefik.frontend.rule=Host:plex."{{ traefik_domain }}"