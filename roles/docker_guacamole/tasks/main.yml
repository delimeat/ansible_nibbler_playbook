- name: check if initdb.sql exists
  stat:
   path: "{{ guac_dir }}/initdb.sql"
  register: guac_initdb_file

- name: extract sql from guacamole container
  docker_container:
   name: guac_temp
   image: "{{ guac_image }}:{{ guac_image_tag }}"
   pull: false
   state: started
   command: "/bin/sh -c '/opt/guacamole/bin/initdb.sh --mysql > /tmp/initdb.sql'"
   detach: no
   interactive: yes
   tty: yes
   recreate: yes
   cleanup: yes
   volumes:
    - "{{ guac_dir }}:/tmp"
  when: not guac_initdb_file.stat.exists

- name: create guacamole network
  docker_network:
    name: guac_net

- name: copy db service template
  template: 
   src: guacamole-db.service.j2 
   dest: "/etc/systemd/system/guacamole-db.service"
   mode: 0755
  notify:
   - restart guacamole db

- name: create guac_db container
  docker_container:
   name: "{{ guac_db_container_name }}"
   image: "{{ guac_db_image }}:{{ guac_db_image_tag }}"
   pull: false
   restart_policy: no
   state: present
   user: "{{ docker_uid }}:{{ docker_gid }}"
   networks:
    - name: guac_net
   volumes:
    - "{{ guac_dir }}/initdb.sql:/docker-entrypoint-initdb.d/initdb.sql:ro"
    - "{{ guac_db_dir }}:/var/lib/mysql"
   env:
    MYSQL_ROOT_PASSWORD: "{{ guac_db_root_pwd }}"
    MYSQL_DATABASE: "{{ guac_db_name }}"
    MYSQL_USER: "{{ guac_db_usr }}"
    MYSQL_PASSWORD: "{{ guac_db_pwd }}"
  notify:
   - restart guacamole db

- name: copy guacd service template
  template: 
   src: guacd.service.j2 
   dest: "/etc/systemd/system/guacd.service"
   mode: 0755
  notify:
   - restart guacd

- name: create guacd container
  docker_container:
   name: "{{ guacd_container_name }}"
   image: "{{ guacd_image }}:{{ guacd_image_tag }}"
   pull: false
   restart_policy: no
   state: present
   networks:
    - name: guac_net
  notify:
   - restart guacd

- name: copy app service template
  template: 
   src: guacamole.service.j2 
   dest: "/etc/systemd/system/guacamole.service"
   mode: 0755
  notify:
   - restart guacamole app

- name: create guacamole container
  docker_container:
   name: "{{ guac_container_name }}"
   image: "{{ guac_image }}:{{ guac_image_tag }}"
   pull: false
   restart_policy: no
   state: present
   networks:
    - name: guac_net
    - name: "{{ traefik_network_name }}"
   env:
    MYSQL_HOSTNAME: "{{ guac_db_container_name }}"
    MYSQL_DATABASE: "{{ guac_db_name }}"
    MYSQL_USER: "{{ guac_db_usr }}"
    MYSQL_PASSWORD: "{{ guac_db_pwd }}"
    GUACD_HOSTNAME: "{{ guacd_container_name }}"
   labels:
    traefik.enable=true
    traefik.docker.network="{{ traefik_network_name }}"
    traefik.backend=guac
    traefik.port=8080
    traefik.frontend.rule=Host:guac."{{ traefik_domain }};AddPrefix:/guacamole" 
  notify:
   - restart guacamole app

- name: start guac db
  systemd:
   name: guacamole-db
   state: started
   enabled: yes
   daemon_reload: yes

- name: start guacd
  systemd:
   name: guacd
   state: started
   enabled: yes
   daemon_reload: yes

- name: start guacamole
  systemd:
   name: guacamole
   state: started
   enabled: yes
   daemon_reload: yes